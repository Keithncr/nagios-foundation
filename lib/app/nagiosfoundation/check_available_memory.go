package nagiosfoundation

import (
	"flag"
	"fmt"
	"log"
	"os"

	"github.com/jkerry/nagiosfoundation/lib/pkg/nagiosformatters"
	"github.com/jkerry/nagiosfoundation/lib/pkg/perfcounters"
)

func CheckAvailableMemory() {
	var warning = flag.Float64("warning", 85, "the memory threshold to issue a warning alert")
	var critical = flag.Float64("critical", 95, "the memory threshold to issue a critical alert")
	var pollingAttempts = flag.Int("polling_attempts", 3, "the number of times to fetch and average")
	var pollingDelay = flag.Int("polling_delay", 1, "the number of seconds to delay between polling attempts")
	var metricName = flag.String("metric_name", "available_memory_mbs", "the name of the metric generated by this check")
	flag.Parse()
	counter, err := perfcounters.ReadPerformanceCounter("\\Memory\\Available MBytes", *pollingAttempts, *pollingDelay)
	if err == nil {
		var msg string
		var retcode int
		msg, retcode = nagiosformatters.LesserFormatNagiosCheck("\\Memory\\Available MBytes", counter.Value, *warning, *critical, *metricName)
		fmt.Println(msg)
		os.Exit(retcode)
	} else {
		log.Println(err)
		os.Exit(3)
	}
}
